{"paragraphs":[{"text":"%md\n\n# Modeling using PySpark\n\nNow it's your turn. Let's try to create a model using the bank's customer data to predict who would buy the new product.\n","dateUpdated":"2018-03-27T17:17:37+0100","config":{"colWidth":12,"editorMode":"ace/mode/markdown","results":{},"enabled":true,"editorSetting":{"language":"markdown","editOnDblClick":true},"editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1522167371513_-1976381549","id":"20180326-191345_356225317","dateCreated":"2018-03-27T17:16:11+0100","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2628","user":"anonymous","dateFinished":"2018-03-27T17:17:37+0100","dateStarted":"2018-03-27T17:17:37+0100","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Modeling using PySpark</h1>\n<p>Now it&rsquo;s your turn. Let&rsquo;s try to create a model using the bank&rsquo;s customer data to predict who would buy the new product.</p>\n</div>"}]}},{"title":"User name and password","text":"%pyspark\n\n# Pick a user name and a password for the ranking\nuserName = \"test-user2\"\nuserPassword = \"test-user2\"\n","dateUpdated":"2018-03-27T17:23:06+0100","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1522167371513_-1976381549","id":"20180325-203059_716008748","dateCreated":"2018-03-27T17:16:11+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2629","user":"anonymous","dateFinished":"2018-03-27T17:23:06+0100","dateStarted":"2018-03-27T17:23:06+0100"},{"title":"Data download","text":"%pyspark\n\nimport urllib.request\n\nurllib.request.urlretrieve(\"https://wsleaderboard.herokuapp.com/data/test.snappy.parquet\", \"/tmp/test.snappy.parquet\")\nurllib.request.urlretrieve(\"https://wsleaderboard.herokuapp.com/data/training.snappy.parquet\", \"/tmp/training.snappy.parquet\")\nurllib.request.urlretrieve(\"https://wsleaderboard.herokuapp.com/data/test.snappy.parquet\", \"/tmp/validation.snappy.parquet\")","dateUpdated":"2018-03-27T17:18:49+0100","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"('/tmp/validation.snappy.parquet', <http.client.HTTPMessage object at 0x10f0e5518>)\n"}]},"apps":[],"jobName":"paragraph_1522167371513_-1976381549","id":"20180325-204653_989003210","dateCreated":"2018-03-27T17:16:11+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2630","user":"anonymous","dateFinished":"2018-03-27T17:18:50+0100","dateStarted":"2018-03-27T17:18:49+0100"},{"title":"Data ingestion","text":"%pyspark\n\ndata = sqlContext.read.parquet(\"/tmp/training.snappy.parquet\")\ntest = sqlContext.read.parquet(\"/tmp/test.snappy.parquet\")\nvalidation = sqlContext.read.parquet(\"/tmp/validation.snappy.parquet\")\ndata.show(10)","dateUpdated":"2018-03-27T17:18:53+0100","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---+-------+-------+-----------+-------+-------+----+---------+-----+-----------+--------+--------+-----+--------+-----------+------------+--------------+-------------+---------+-----------+---+\n|age|    job|marital|  education|default|housing|loan|  contact|month|day_of_week|duration|campaign|pdays|previous|   poutcome|emp.var.rate|cons.price.idx|cons.conf.idx|euribor3m|nr.employed|  y|\n+---+-------+-------+-----------+-------+-------+----+---------+-----+-----------+--------+--------+-----+--------+-----------+------------+--------------+-------------+---------+-----------+---+\n| 18|student| single|high.school|     no|    yes| yes| cellular|  mar|        tue|     103|       1|  999|       0|nonexistent|        -1.8|        92.843|        -50.0|    1.687|     5099.1| no|\n| 19|student| single|   basic.6y|     no|     no|  no| cellular|  mar|        tue|     136|       1|  999|       0|nonexistent|        -1.8|        92.843|        -50.0|    1.556|     5099.1|yes|\n| 19|student| single|   basic.9y|     no|     no|  no| cellular|  apr|        thu|     165|       3|  999|       0|nonexistent|        -1.8|        93.075|        -47.1|     1.41|     5099.1| no|\n| 19|student| single|   basic.9y|     no|     no|  no| cellular|  apr|        tue|      43|       3|  999|       0|nonexistent|        -1.8|        93.075|        -47.1|    1.453|     5099.1| no|\n| 19|student| single|   basic.9y|     no|    yes|  no| cellular|  mar|        fri|     126|       4|  999|       0|nonexistent|        -1.8|        92.843|        -50.0|     1.64|     5099.1|yes|\n| 19|student| single|   basic.9y|unknown|    yes|  no| cellular|  jul|        mon|      87|       4|  999|       0|nonexistent|         1.4|        93.918|        -42.7|     4.96|     5228.1| no|\n| 19|student| single|    unknown|     no|     no|  no| cellular|  apr|        fri|     108|       5|  999|       0|nonexistent|        -1.8|        93.075|        -47.1|    1.405|     5099.1| no|\n| 19|student| single|    unknown|     no|    yes|  no| cellular|  apr|        fri|     156|       1|  999|       0|nonexistent|        -1.8|        93.075|        -47.1|    1.405|     5099.1|yes|\n| 19|student| single|    unknown|     no|    yes|  no|telephone|  apr|        fri|    1161|       5|  999|       0|nonexistent|        -1.8|        93.075|        -47.1|    1.405|     5099.1| no|\n| 20| admin.| single|high.school|     no|     no|  no| cellular|  jul|        wed|     208|       4|  999|       0|nonexistent|         1.4|        93.918|        -42.7|    4.962|     5228.1| no|\n+---+-------+-------+-----------+-------+-------+----+---------+-----+-----------+--------+--------+-----+--------+-----------+------------+--------------+-------------+---------+-----------+---+\nonly showing top 10 rows\n\n"}]},"apps":[],"jobName":"paragraph_1522167371514_-1975227302","id":"20180325-204729_1347687492","dateCreated":"2018-03-27T17:16:11+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2631","user":"anonymous","dateFinished":"2018-03-27T17:18:53+0100","dateStarted":"2018-03-27T17:18:53+0100"},{"title":"Modeling pipeline","text":"%pyspark\n\nfrom pyspark.ml.feature import VectorAssembler\nfrom pyspark.ml.clustering import KMeans\nfrom pyspark.ml import Pipeline\nfrom pyspark.ml.feature import OneHotEncoder, StringIndexer, Normalizer\nfrom pyspark.ml.classification import RandomForestClassifier\nfrom pyspark.mllib.evaluation import BinaryClassificationMetrics\nfrom pyspark.ml.classification import LogisticRegression\n\n# Balancing the dataset (highly skewed data)\nbalancedDataset = data.filter(\"y = 'no'\").limit(8000).union(data.filter(\"y = 'yes'\"))\n\n# Model features\njobIndexer = StringIndexer(inputCol=\"job\", outputCol=\"jobInd\")\njobEncoder = OneHotEncoder(inputCol=\"jobInd\", outputCol=\"jobVec\")\nassembler = VectorAssembler(inputCols=[\"jobVec\"],outputCol=\"assembledFeatures\")\n# Label creation\nlabelIndexer = StringIndexer(inputCol=\"y\", outputCol=\"indexedLabel\")\n\n# Random forest model\nrf = RandomForestClassifier(labelCol=\"indexedLabel\", featuresCol=\"assembledFeatures\", numTrees=20)\n\n# Pipeline\npipeline = Pipeline(stages=[jobIndexer, jobEncoder,  assembler, labelIndexer, rf])\n\nmodel = pipeline.fit(balancedDataset)   # Using the training set\npredictions = model.transform(test)     # Using the test set\n\npredictionsAndLabels = predictions.rdd.map(lambda x: (x['indexedLabel'], x['prediction']))\n# Instantiate metrics object\nmetrics = BinaryClassificationMetrics(predictionsAndLabels)\n\n# Area under precision-recall curve\nprint(\"Area under PR = %s\" % metrics.areaUnderPR)\n\n# Area under ROC curve\nprint(\"Area under ROC = %s\" % metrics.areaUnderROC)","dateUpdated":"2018-03-27T17:19:25+0100","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Area under PR = 0.23554894289295814\nArea under ROC = 0.5848990771158465\n"}]},"apps":[],"jobName":"paragraph_1522167371514_-1975227302","id":"20180325-204823_331340827","dateCreated":"2018-03-27T17:16:11+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2632","user":"anonymous","dateFinished":"2018-03-27T17:19:02+0100","dateStarted":"2018-03-27T17:18:56+0100"},{"title":"Model evaluation - DO NOT EDIT THIS CELL! - Please make sure your model is called 'model'","text":"%pyspark\n\nresults = model.transform(validation)\nsubmission = \"\".join(list(map(lambda x: '1' if x['prediction'] == 1.0 else '0', results.select('prediction').collect())))\nimport requests\n\nsession = requests.Session()\n\nurl = 'https://wsleaderboard.herokuapp.com/'\ncontent = {'username': userName, 'password': userPassword}\nheaders = {'Content-type': 'application/JSON'}\n\nr = session.post(url + 'login', json=content, headers=headers)\n\nsub = {'labels': submission}\n\nres = session.post(url + 'submission', json=sub)\n\nprint(res.text)","dateUpdated":"2018-03-27T17:45:10+0100","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"{\"status\":\"invalid\"}\n"}]},"apps":[],"jobName":"paragraph_1522167371514_-1975227302","id":"20180218-224547_550167252","dateCreated":"2018-03-27T17:16:11+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2633","user":"anonymous","dateFinished":"2018-03-27T17:45:11+0100","dateStarted":"2018-03-27T17:45:10+0100"},{"text":"%pyspark\n","dateUpdated":"2018-03-27T17:16:11+0100","config":{"colWidth":12,"results":{},"enabled":true,"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1522167371514_-1975227302","id":"20180326-185558_1834181201","dateCreated":"2018-03-27T17:16:11+0100","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2634"}],"name":"Task 2","id":"2DB66X1ZD","angularObjects":{"2D8MNS82M:shared_process":[],"2D8KQE92P:shared_process":[],"2D8P8URXH:shared_process":[],"2D7GW4WD5:shared_process":[],"2D871HMZA:shared_process":[],"2D6UX3TBT:shared_process":[],"2D886YVQM:shared_process":[],"2D6J3EFVT:shared_process":[],"2D8FHHFU5:shared_process":[],"2D954TTF8:shared_process":[],"2D95FJ579:shared_process":[],"2D84P1U12:shared_process":[],"2D8DHUJVN:shared_process":[],"2D8XGMM1B:shared_process":[],"2D8VBSAXK:shared_process":[],"2D7E5VQ3F:shared_process":[],"2D9KUE39G:shared_process":[],"2D7D9MABB:shared_process":[],"2D5UKYEN4:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}